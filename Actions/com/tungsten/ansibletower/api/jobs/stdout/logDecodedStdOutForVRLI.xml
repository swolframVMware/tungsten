<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="logDecodedStdOutForVRLI" result-type="void" api-version="6.0.0" id="9257fca1-b3ba-4f17-8557-709e2f674fe2" version="1.0.0" allowed-operations="vfe" category-name="com.tungsten.ansibletower.api.jobs.stdout">
  <param n="decodedStdOut" t="string"><![CDATA[]]></param>
  <param n="ansibleWorkflowName" t="string"><![CDATA[]]></param>
  <param n="anisbleWorkflowJobId" t="string"><![CDATA[]]></param>
  <param n="ansibleJobName" t="string"><![CDATA[]]></param>
  <param n="ansibleJobId" t="string"><![CDATA[]]></param>
  <param n="workflowName" t="string"><![CDATA[]]></param>
  <param n="workflowId" t="string"><![CDATA[]]></param>
  <script encoded="false"><![CDATA["use strict"
eval(System.getModule("com.tungsten.vro.debug.logging").startActionSnippet());

var lines = decodedStdOut.split("\n");

var lineHeader =
    "vRO->Ansible->vRLI Connector::ansibleWorkflowName," + ansibleWorkflowName +
        "::anisbleWorkflowJobId," + anisbleWorkflowJobId +
        "::ansibleJobName," + ansibleJobName + 
        "::ansibleJobId," + ansibleJobId + 
        "::workflowName," + workflowName + 
        "::workflowId," + workflowId

for each(var line in lines) {
    System.debug(
        lineHeader + "\n" +
        line
    )
}

eval(System.getModule("com.tungsten.vro.debug.logging").endActionSnippet());
return;]]></script>
</dunes-script-module>