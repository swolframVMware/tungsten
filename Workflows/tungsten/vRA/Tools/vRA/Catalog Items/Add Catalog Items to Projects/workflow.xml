<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="0563c630-1598-4808-bf6b-3e84ff952818" version="0.0.0" api-version="6.0.0" allowed-operations="vfe" editor-version="2.0" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Add Catalog Items to Projects]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="catalogItems" type="Array/Properties"/>
    <param name="allProjects" type="boolean"/>
    <param name="includeProjectNames" type="string"/>
    <param name="excludeProjectNames" type="string"/>
    <param name="operation" type="string"/>
  </input>
  <workflow-item name="item0" type="end" end-mode="0">
    <in-binding/>
    <position y="50.0" x="340.0"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" type="task">
    <display-name><![CDATA[Add Catalog Items to Projects ]]></display-name>
    <script encoded="false"><![CDATA["use strict"

var projects;
if(allProjects) {
    projects = getAllProjects();
} else {
    projects = getProjectsFromCSV(includeProjectNames);
}

projects = removeExcludedProjects(projects, excludeProjectNames);

System.log("*******************************OPERATING ON " + projects.keys.length + " PROJECTS************************************");
System.log(projects.keys.join(","));
System.log("*******************************OPERATING ON " + projects.keys.length + " PROJECTS************************************");

for each (var catalogItem in catalogItems) {
    for each (var projectName in projects.keys) {
        var projectId = projects[projectName];

        if(operation == "add") {
            System.log("Adding catalog item '" + catalogItem.name +  "' to project '" + projectName + "'");            
            System.getModule("com.tungsten.vra.api.catalog.admin.entitlements").addCatalogItemToProject(System.getModule("com.tungsten.system.configuration").getConfigurationProfile("vra"), projectId, catalogItem.id)

        } else if(operation == "remove") {
            var entitlementId = getEntitlementId(catalogItem, projectId);

            if(entitlement == null) {
                System.log("Removing '" + catalogItem.name + "' from project '" + projectName + "'");

                System.getModule("com.tungsten.vra.api.catalog.admin.entitlements").deleteEntitlement(System.getModule("com.tungsten.system.configuration").getConfigurationProfile("vra"), entitlementId);
            } else {
                System.warn("Project '" + projectName + "' does not contain the catalog item '" + catalogItem.name + "'");
            }
        } else {
            throw "Unknown operation '" + operation + "'";
        }
    }
}

/**
 * 
 */
function getEntitlementId(catalogItem, projectId) {
    var entitlements = System.getModule("com.tungsten.vra.api.catalog.admin.entitlements").getEntitlements(System.getModule("com.tungsten.system.configuration").getConfigurationProfile("vra"), projectId);

    for each(var entitlement in entitlements) {
        if(entitlement.definition.id == catalogItem.id) {
            return entitlement.id;
        }
    }

    return null;
}

/**
 * 
 */
function getAllProjects() {
    var projects = new Properties();

    var top = 50;
    var skip = 0;
    var total = 0;
    var more = true;

    while(more) {
        var response = System.getModule("com.tungsten.vra.api.iaas.projects").getProjects(System.getModule("com.tungsten.system.configuration").getConfigurationProfile("vra"), top, skip, null, null);

        for each (var project in response.content) {
            projects.put(project.name, project.id);
        }

        skip += top;
        more = (response.totalElements > projects.keys.length);
    }

    System.debug("Collected " + projects.keys.length + " projects.");

    return projects;
}

/**
 * 
 */
function getProjectsFromCSV(includeProjectNames) {
    var projects = new Properties();

    for each(includeProjectName in includeProjectNames.split(",")) {
        var response = System.getModule("com.tungsten.vra.api.iaas.projects").getProjects(System.getModule("com.tungsten.system.configuration").getConfigurationProfile("vra"), 99999, 0, null, "name%20eq%20%27" + includeProjectName + "%27");  

        if(response.totalElements == 0) {
           throw "Unable to find project with name '" + includeProjectName + "'";
        }

        if(response.totalElements > 1) {
           throw "More than one project with name '" + includeProjectName + "'";
        }

        var project = response.content[0]

        projects.put(project.name, project.id);
    }

    return projects;
}

/**
 * 
 */
function removeExcludedProjects(projects, excludeProjectNames) {
    for each(var excludeProjectName in excludeProjectNames.split(",")) {
        if(projects[excludeProjectName]) {
            System.warn("Excluded project '" + excludeProjectNames + "' not in the included projects.")
        }
        projects.remove(excludeProjectName);
    }

    return projects;
}]]></script>
    <in-binding>
      <bind name="allProjects" type="boolean" export-name="allProjects"/>
      <bind name="catalogItems" type="Array/Properties" export-name="catalogItems"/>
      <bind name="operation" type="string" export-name="operation"/>
      <bind name="excludeProjectNames" type="string" export-name="excludeProjectNames"/>
      <bind name="includeProjectNames" type="string" export-name="includeProjectNames"/>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="60.0" x="180.0"/>
  </workflow-item>
  <presentation>
    <p-param name="catalogItems">
      <desc><![CDATA[catalogItems]]></desc>
    </p-param>
    <p-param name="allProjects">
      <desc><![CDATA[allProjects]]></desc>
    </p-param>
    <p-param name="includeProjectNames">
      <desc><![CDATA[includeProjectNames]]></desc>
    </p-param>
    <p-param name="excludeProjectNames">
      <desc><![CDATA[excludeProjectNames]]></desc>
    </p-param>
    <p-param name="operation">
      <desc><![CDATA[operation]]></desc>
    </p-param>
  </presentation>
</workflow>