<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="09e991ad-4327-4d8b-92d4-709ecfd87812" version="0.0.0" api-version="6.0.0" allowed-operations="vfe" editor-version="2.0" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Add Environmental Custom Properties to Resource]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="inputProperties" type="Properties"/>
    <param name="__tokenName" type="string"/>
  </input>
  <output>
    <param name="customProperties" type="Properties"/>
  </output>
  <workflow-item name="item0" type="end" end-mode="0">
    <in-binding/>
    <position y="50.0" x="340.0"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" type="task">
    <display-name><![CDATA[Add Environmental Custom Properties to Resource]]></display-name>
    <script encoded="false"><![CDATA["use strict"
    
var MARKER_VALUE = "<<from_env_config>>";

customProperties = inputProperties.customProperties;

var blueprint = System.getModule("com.tungsten.vra.api.blueprint.blueprints").getBlueprint(System.getModule("com.tungsten.system.configuration").getConfigurationProfile("vra"), inputProperties.blueprintId);

var configurationElementPath = "system/configuration/" + System.getModule("com.tungsten.vra.plugin.rest").getDefaultvRAHostnameImpl() + "/cloud template/" + blueprint.name + "/resources";
var configurationElementName = inputProperties.componentId;
var values = System.getModule("com.tungsten.vro.configuration").convertConfigurationElementToProperties(System.getModule("com.tungsten.vro.configuration").getConfigurationElementInBase(configurationElementPath, configurationElementName));

for each(var key in values.keys) {
    if(customProperties[key] == undefined) {
        System.log("'" + key + "' does not exist, not setting.");
    } else if(customProperties[key].toLowerCase() == MARKER_VALUE.toLowerCase()) {
        System.log("'" + key + "' set to '" + customProperties[key] + "', setting to '" + values[key] + "'.");
        customProperties[key] = values[key];
    } else {
        System.log("'" + key + "' set to '" + customProperties[key] + "', leaving value.");
    }
}

var badKeys = new Array();
for each(var key in customProperties.keys) {
    if(customProperties[key].toLowerCase() == MARKER_VALUE.toLowerCase()) {
        badKeys.push(key);
    }
}

if(badKeys.length > 0) {
    throw "Custom properties, '" + badKeys.join("' , '") + "' were defined as '" + MARKER_VALUE + "' but not defined in configuration element: '" + configurationElementPath + "/" + configurationElementName;
}]]></script>
    <in-binding>
      <bind name="inputProperties" type="Properties" export-name="inputProperties"/>
    </in-binding>
    <out-binding>
      <bind name="customProperties" type="Properties" export-name="customProperties"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="60.0" x="180.0"/>
  </workflow-item>
  <presentation>
    <p-param name="inputProperties">
      <desc><![CDATA[inputProperties]]></desc>
    </p-param>
    <p-param name="__tokenName">
      <desc><![CDATA[__tokenName]]></desc>
    </p-param>
  </presentation>
</workflow>